<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

	xsi:schemaLocation="  
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
  http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- Spring mvc 返回json时，统一设置当属性为空时序列化的值，以及日期格式。
		如果需要针对单个类的单个属性设置只需要在类的 field 上面添加 annotation @JsonFormat
		(@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8"))
		实现。reference ： http://wiki.fasterxml.com/JacksonFAQDateHandling-->
	<bean name="objectMapper" class="net.yuanmomo.util.json.CustomObjectMapper" />
	
	<!-- 启动Spring MVC的注解功能 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean id="jsonHttpMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper" ref="objectMapper" />
				<property name="supportedMediaTypes">
					<list>
						<value>*/*;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean id="stringHttpMessageConverter"
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>*/*;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- 自定义拦截器 - 设置 session 到 ThreadLocal -->
	<!--<mvc:interceptors>-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/**"/>-->
		<!--</mvc:interceptor>-->
	<!--</mvc:interceptors>-->
	
	<!-- 把标记了@Controller注解的类转换为bean -->
	<context:component-scan base-package="net.yuanmomo.framework.controller,net.yuanmomo.util.controller" />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/" p:suffix=".jsp" />
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
		p:maxUploadSize="5000000" />
</beans>
